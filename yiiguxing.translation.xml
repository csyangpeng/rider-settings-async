<application>
  <component name="AppStorage">
    <histories>
      <item value="Obsolete" />
      <item value="No suitable constructor found for entity type 'Opinions'. The following constructors had parameters that could not be bound to properties of the entity type: cannot bind 'tenantId', 'userId' in 'Opinions(Nullable&lt;int&gt; tenantId, long userId, string remark)'." />
      <item value="cannot be marked as owned because a non-owned entity type with the same name already exists" />
      <item value="The type 'Opinion' cannot be marked as owned because a non-owned entity type with the same name already exists." />
      <item value="non-owned entity" />
      <item value="Represents a time interval." />
      <item value="Destination" />
      <item value="Guarantee Picture" />
      <item value="Guarantee Image" />
      <item value="Guarantee" />
      <item value="Attempted to update or delete an entity that does not exist in the store." />
      <item value="Cannot access a disposed object. A common cause of this error is disposing a context that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling Dispose() on the context, or wrapping the context in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances. Object name: 'OSDbContext'." />
      <item value="Class 'AbroadApplicationForm' has some virtual members but no inheritors" />
      <item value="The child/dependent side could not be determined for the one-to-one relationship between 'AbroadApplicationForm.AuditedAbroad' and 'AuditedAbroad.ApplicationForm'. To identify the child/dependent side of the relationship, configure the foreign key property. If these navigations should not be part of the same relationship configure them without specifying the inverse. See http://go.microsoft.com/fwlink/?LinkId=724062 for more details." />
      <item value="No suitable constructor found for entity type 'AuditedAbroad'. The following constructors had parameters that could not be bound to properties of the entity type: cannot bind 'applicationForm' in 'AuditedAbroad(AbroadApplicationForm applicationForm)'." />
      <item value="Implicitly captured closure: yangpeng" />
      <item value="There are a lot of fixes in Unity support" />
      <item value="The bundled MSBuild version has been updated to support building .NET Core 3 projects." />
      <item value="Scrolling in a database table view/editor with many columns is now faster." />
      <item value="xport/Import settings works again." />
      <item value="Enabling Roslyn Analyzers in the solution does not hang code analysis anymore." />
      <item value="Add, Update, Change, and other actions work again in the NuGet tool window on Linux" />
      <item value="dd, Update, Change, and other actions work again in the NuGet tool window on Linux The bundled MSBuild version has been updated to support building .NET Core 3 projects. There are a lot of fixes in Unity support. Enabling Roslyn Analyzers in the solution does not hang code analysis anymore. Export/Import settings works again. Scrolling in a database table view/editor with many columns is now faster." />
      <item value="Instantly shows changes made to your code during a debugging session, making it unnecessary to reload web pages and Node.js files. By default, the Live Edit functionality is enabled for HTML and CSS files only. To turn it on for JavaScript, Node.js, and other file types, go to Settings/Preferences | Build, Execution, Deployment | Debugger | Live Edit. To start using Live Edit, open the HTML file you’re working with and select Debug in its context menu. This will launch the JavaScript debugger in WebStorm and open your file in the browser. As you edit the code, you’ll see the changes you make reflected in the browser." />
      <item value="Language injection Pattern validation Regular expression support Language Injections page in the Settings/Preferences dialog. Ability to edit injected code in the special scratch-pad editor" />
      <item value="Enables user configurable language injection support (originally developed by Sascha Weinreuter sascha.weinreuter@cit.de) The following features are available" />
      <item value="Class 'Abp.Domain.Values.ValueObject' does not have type parameters" />
      <item value="Qualified Name" />
      <item value="Maps TUpdateInput to TEntity to update the entity. It uses IObjectMapper by default. It can be overrided for custom mapping." />
      <item value="Sequence contains more than one element" />
      <item value="Measure the pain you experience during development, and find out how variations in development technique, code design, and disruptions affect the pain you experience. Intended to be used with the IdeaFlowDX Profiler tools that help you categorize problems with simple #hashtags and add up the pain. MVP Release 6/1/2017" />
      <item value="A small tool to keep track of the Github repositories you have in your organization along with their pull requests, releases and more" />
      <item value="using redis cache for the WeixinSDK" />
      <item value="Config using redis cache for the WeixinSDK" />
      <item value="Config using redis cache for WeixinSDK" />
      <item value="Maximum" />
      <item value="certificate" />
      <item value="Initialize" />
      <item value="Length" />
      <item value="Organization" />
      <item value="reduce the number of tools you use" />
      <item value="The user who owns the recovery code" />
      <item value="specified" />
      <item value=" initialization" />
      <item value=" initialize" />
      <item value="初始化" />
      <item value="entity" />
      <item value="提醒类型的任务" />
      <item value="Initializes a new instance of the &lt;see cref=&quot;ReminderTodo&quot;/&gt; class." />
      <item value="Todo's state" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="65" />
        <entry key="ENGLISH" value="72" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20191213000365671" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="foldOriginal" value="true" />
    <option name="ignoreRegExp" value="" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Courier New" />
    <option name="primaryFontFamily" value="Microsoft YaHei" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5514f44dfc808a03" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>